#!/usr/bin/env bash

# contract.deploy keypair account template args

set -uo pipefail

# cd $(dirname $(realpath $0))

dir=$(keypair.parse "$1")
if [[ $? -ne 0 ]]; then
  echo "$dir"
  exit 1
fi

# echo $dir
# exit

# echo dir: $dir
# rm -r $dir
# exit 0

cname=$(pwgen -N1 -n 12)

account="$2"
template="${3:-Empty}"
args="${4}"

# 如果 $4 是文件, 从此 json 文件中读取内容
if [[ -f "$4" ]]; then
	args="$(cat $4)"
fi

BIN=$PWD/template/$template.bin
ABI=$PWD/template/$template.abi

# solc --base-path $PWD/template/node_modules/ template/$template.sol -o template --bin --abi --overwrite >>$dir/log

>$dir/log

if ! [[ -f $ABI ]]; then
  solc --base-path $PWD/template/node_modules/ template/$template.sol -o template --abi --overwrite >>$dir/log
fi

if ! [[ -f $BIN ]]; then
  solc --base-path $PWD/template/node_modules/ template/$template.sol -o template --bin --overwrite >>$dir/log
fi

echo $BIN >> $dir/log
echo $ABI >> $dir/log
echo $account >> $dir/log
echo $template >> $dir/log
echo "$args" >> $dir/log
# xchain-cli --keys $dir account new --account $account --fee 1000 > $dir/log
echo xchain-cli --keys $dir evm deploy --account $account -a "$args" --cname $cname --fee 25000 $BIN --abi $ABI >> $dir/log
xchain-cli --keys $dir evm deploy --account $account -a "$args" --cname "$cname" --fee 25000 $BIN --abi $ABI >> $dir/log
exit_code=$?
if [[ $exit_code -ne 0 ]]; then
	cat $dir/log | tail -n1
	exit $exit_code
fi

cat<<EOF
contract: "$cname"
addressEvm: "$(addrconv x2e $cname | jq -r .result)"
template: $template
tx: "$(cat $dir/log | grep 'Tx id:' | sed 's,Tx id: ,,g')"
EOF

# rm -r $dir
